{"version":3,"sources":["components/Controls/Controls.jsx","components/Counter/Counter.jsx","components/Publication/Publication.jsx","components/Reader/Reader.jsx","components/App/App.jsx","index.jsx"],"names":["Controls","onTogglePublication","indexOfPage","lengthOfPublications","className","type","name","onClick","disabled","Counter","currentIndex","Publication","publicationTitle","publicationText","Reader","state","indexCurrentPage","control","props","items","length","handleTogglePublications","e","currentTarget","setState","this","title","text","Component","App","ReactDom","render","document","querySelector"],"mappings":"oPAmDeA,EAjDE,SAAC,GAAD,IACfC,EADe,EACfA,oBACAC,EAFe,EAEfA,YACAC,EAHe,EAGfA,qBAHe,OAKf,6BAASC,UAAU,YACA,IAAhBF,EACC,4BACEG,KAAK,SACLD,UAAU,SACVE,KAAK,WACLC,QAASN,EACTO,UAAU,GALZ,kCAUA,4BACEH,KAAK,SACLD,UAAU,SACVE,KAAK,WACLC,QAASN,GAJX,kCASDC,IAAgBC,EACf,4BACEE,KAAK,SACLD,UAAU,SACVE,KAAK,OACLC,QAASN,EACTO,UAAU,GALZ,wCAUA,4BACEH,KAAK,SACLD,UAAU,SACVE,KAAK,OACLC,QAASN,GAJX,0CChCSQ,EALC,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcP,EAAjB,EAAiBA,qBAAjB,OACd,uBAAGC,UAAU,WACVM,EADH,IACkBP,ICKLQ,EAPK,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAkBC,EAArB,EAAqBA,gBAArB,OAClB,6BAAST,UAAU,eACjB,4BAAKQ,GACL,2BAAIC,KCCaC,E,2MAMnBC,MAAQ,CACNC,iBAAkB,G,EAGpBC,QAAU,CACRd,qBAAsB,EAAKe,MAAMC,MAAMC,Q,EAGzCC,yBAA2B,SAAAC,GACA,SAAzBA,EAAEC,cAAcjB,KACZ,EAAKkB,UAAS,SAAAT,GAAK,MAAK,CACtBC,iBAAkBD,EAAMC,iBAAmB,MAE7C,EAAKQ,UAAS,SAAAT,GAAK,MAAK,CACtBC,iBAAkBD,EAAMC,iBAAmB,O,wEAIzC,IACAA,EAAqBS,KAAKV,MAA1BC,iBACAb,EAAyBsB,KAAKR,QAA9Bd,qBACR,OACE,yBAAKC,UAAU,UACb,kBAAC,EAAD,CACEH,oBAAqBwB,KAAKJ,yBAC1BnB,YAAac,EACbb,qBAAsBA,IAExB,kBAAC,EAAD,CACEO,aAAcM,EACdb,qBAAsBA,IAGxB,kBAAC,EAAD,CACES,iBAAkBa,KAAKP,MAAMC,MAAMH,EAAmB,GAAGU,MACzDb,gBAAiBY,KAAKP,MAAMC,MAAMH,EAAmB,GAAGW,Y,GAzC9BC,a,OCGrBC,EALH,kBACV,yBAAKzB,UAAU,OACb,kBAAC,EAAD,CAAQe,MAAOA,M,MCDnBW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.b0396456.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Controls = ({\r\n  onTogglePublication,\r\n  indexOfPage,\r\n  lengthOfPublications,\r\n}) => (\r\n  <section className=\"controls\">\r\n    {indexOfPage === 1 ? (\r\n      <button\r\n        type=\"button\"\r\n        className=\"button\"\r\n        name=\"previous\"\r\n        onClick={onTogglePublication}\r\n        disabled={true}\r\n      >\r\n        Назад\r\n      </button>\r\n    ) : (\r\n      <button\r\n        type=\"button\"\r\n        className=\"button\"\r\n        name=\"previous\"\r\n        onClick={onTogglePublication}\r\n      >\r\n        Назад\r\n      </button>\r\n    )}\r\n    {indexOfPage === lengthOfPublications ? (\r\n      <button\r\n        type=\"button\"\r\n        className=\"button\"\r\n        name=\"next\"\r\n        onClick={onTogglePublication}\r\n        disabled={true}\r\n      >\r\n        Вперед\r\n      </button>\r\n    ) : (\r\n      <button\r\n        type=\"button\"\r\n        className=\"button\"\r\n        name=\"next\"\r\n        onClick={onTogglePublication}\r\n      >\r\n        Вперед\r\n      </button>\r\n    )}\r\n  </section>\r\n);\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nconst Counter = ({ currentIndex, lengthOfPublications }) => (\r\n  <p className=\"counter\">\r\n    {currentIndex}/{lengthOfPublications}\r\n  </p>\r\n);\r\nexport default Counter;\r\n","import React from 'react';\r\n\r\nconst Publication = ({ publicationTitle, publicationText }) => (\r\n  <article className=\"publication\">\r\n    <h2>{publicationTitle}</h2>\r\n    <p>{publicationText}</p>\r\n  </article>\r\n);\r\n\r\nexport default Publication;\r\n","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport Controls from '../Controls/Controls';\r\nimport Counter from '../Counter/Counter';\r\nimport Publication from '../Publication/Publication';\r\n\r\nexport default class Reader extends Component {\r\n  static propTypes = {\r\n    id: propTypes.string,\r\n    title: propTypes.string,\r\n    text: propTypes.string,\r\n  };\r\n  state = {\r\n    indexCurrentPage: 1,\r\n  };\r\n\r\n  control = {\r\n    lengthOfPublications: this.props.items.length,\r\n  };\r\n\r\n  handleTogglePublications = e => {\r\n    e.currentTarget.name === 'next'\r\n      ? this.setState(state => ({\r\n          indexCurrentPage: state.indexCurrentPage + 1,\r\n        }))\r\n      : this.setState(state => ({\r\n          indexCurrentPage: state.indexCurrentPage - 1,\r\n        }));\r\n  };\r\n\r\n  render() {\r\n    const { indexCurrentPage } = this.state;\r\n    const { lengthOfPublications } = this.control;\r\n    return (\r\n      <div className=\"reader\">\r\n        <Controls\r\n          onTogglePublication={this.handleTogglePublications}\r\n          indexOfPage={indexCurrentPage}\r\n          lengthOfPublications={lengthOfPublications}\r\n        />\r\n        <Counter\r\n          currentIndex={indexCurrentPage}\r\n          lengthOfPublications={lengthOfPublications}\r\n        />\r\n\r\n        <Publication\r\n          publicationTitle={this.props.items[indexCurrentPage - 1].title}\r\n          publicationText={this.props.items[indexCurrentPage - 1].text}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Reader from '../Reader/Reader';\r\nimport items from '../../data-json/publications.json';\r\n\r\nconst App = () => (\r\n  <div className=\"App\">\r\n    <Reader items={items} />\r\n  </div>\r\n);\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './components/App/App';\r\nimport './index.css';\r\n\r\nReactDom.render(<App />, document.querySelector('#root'));\r\n"],"sourceRoot":""}